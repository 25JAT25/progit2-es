== Git en el Servidor

(((serving repositories)))
En este punto, deberías ser capaz de realizar la mayoría de las tareas diarias para las cuales estarás usando Git.
Sin embargo, para poder realizar cualquier colaboración en Git, necesitarás tener un repositorio remoto Git.
Aunque técnicamente puedes enviar y recibir cambios desde repositorios de otros individuos, no se recomienda hacerlo porque, si no tienes cuidado, fácilmente podrías confundir en que es en lo que se está trabajando.
Además, lo deseable es que tus colaboradores sean capaces de acceder al repositorio incluso si tu computadora no está en línea – muchas veces es útil tener un repositorio confiable en común.
Por lo tanto, el método preferido para colaborar con otra persona es configurar un repositorio intermedio al cual ambos tengan acceso, y enviar (push) y recibir (pull) desde allí.

Poner en funcionamiento un servidor Git es un proceso bastante claro.
Primero, eliges con qué protocolos ha de comunicarse tu servidor.
La primera sección de este capítulo cubrirá los protocolos disponibles, así como los pros y los contras de cada uno.
Las siguientes secciones explicarán algunas configuraciones comunes utilizando dichos protocolos y como poner a funcionar tu servidor con alguno de ellos.
Finalmente, revisaremos algunas de las opciones hospedadas, si no te importa hospedar tu código en el servidor de alguien más y no quieres tomarte la molestia de configurar y mantener tu propio servidor.

Si no tienes interés en tener tu propio servidor, puedes saltarte hasta la última sección de este capítulo para ver algunas de las opciones para configurar una cuenta hospedada y seguir al siguiente capítulo, donde discutiremos los varios pormenores de trabajar en un ambiente de control de fuente distribuido.

Un repositorio remoto es generalmente un _repositorio básico_ – un repositorio Git que no tiene directorio de trabajo.
Dado que el repositorio es solamente utilizado como un punto de colaboración, no hay razón para tener una copia instantánea verificada en el disco; tan solo son datos Git.
En los más simples términos, un repositorio básico es el contenido `.git` del directorio de tu proyecto y nada más.

include::sections/protocols.asc[]

include::sections/git-on-a-server.asc[]

include::sections/generating-ssh-key.asc[]

include::sections/setting-up-server.asc[]

include::sections/git-daemon.asc[]

include::sections/smart-http.asc[]

include::sections/gitweb.asc[]

include::sections/gitlab.asc[]

include::sections/hosted.asc[]

=== Resumen

Tienes varias opciones para obtener un repositorio Git remoto y ponerlo a funcionar para que puedas colaborar con otras personas o compartir tu trabajo.

Mantener tu propio servidor te da control y te permite correr tu servidor dentro de tu propio cortafuegos, pero tal servidor generalmente requiere una importante cantidad de tu tiempo para configurar y mantener.
Si almacenas tus datos en un servidor hospedado, es fácil de configurar y mantener; sin embargo, tienes que ser capaz de mantener tu código en los servidores de alguien más, y algunas organizaciones no te lo permitirán.

Debería ser un proceso claro determinar que solución o combinación de soluciones es apropiada para ti y para tu organización.
